{"version":3,"sources":["auth-page/auth-page.module.scss","components/loader/loader.module.scss","components/rotate-block/rotate-block.module.scss","components/input/input.module.scss","components/modal/modal.module.scss","components/button/button.module.scss","serviceWorker.ts","constants/index.ts","assets/mail.tsx","assets/lock.tsx","components/loader/loader.tsx","components/button/button.tsx","components/input/input.tsx","components/rotate-block/rotate-block.tsx","components/modal/modal.tsx","auth-page/auth-page.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","FORM_NAME","ERRORS_MAP","Mail","xmlns","viewBox","d","Lock","id","x","y","Loader","props","width","color","loaderStyle","height","left","top","style","className","loader","borderBottom","cn","inner","one","borderRight","two","borderTop","three","Button","children","disabled","onClick","button","Input","onChange","onEnter","value","label","icon","otherProps","handleOnEnter","useCallback","event","key","wrapper","input","onKeyDown","RotateBlock","FrontComponent","BackComponent","isFront","content","show","front","invisible","back","blockTimeoutId","activeTimeoutId","Modal","isActive","useState","block","setBlock","active","setActive","isActiveMemo","useMemo","useEffect","setTimeout","clearTimeout","ReactDOM","createPortal","modal","document","getElementById","timeoutId","AuthPage","firebase","loading","setLoading","isModalActive","toggleModal","SING_IN","form","setForm","message","showInfoBlock","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isRegistryForm","REGISTRATION","isDisabled","handleShowInfoBlock","errorMessage","closeInfoBlock","clearForm","toggleForm","handleChange","setState","target","handleToggleModal","handleCreate","a","auth","createUserWithEmailAndPassword","user","console","log","code","handleSingIn","signInWithEmailAndPassword","handleSubmit","handleGoToMainPage","submitButton","submitText","authPage","title","forms","forms_active","registration","placeholder","type","singIn","linkWrap","link","link_active","modalButton","appFirebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","render","navigator","serviceWorker","ready","then","unregister","catch","error"],"mappings":"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","file":"static/js/main.788b8c62.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"authPage\":\"auth-page_authPage__tGKjL\",\"title\":\"auth-page_title__29bG1\",\"forms\":\"auth-page_forms__3pCQZ\",\"forms_active\":\"auth-page_forms_active__1ZCCj\",\"form\":\"auth-page_form__1peGR\",\"singIn\":\"auth-page_singIn__uE3vV\",\"input\":\"auth-page_input__3T-Tv\",\"linkWrap\":\"auth-page_linkWrap__1gxmH\",\"link\":\"auth-page_link__2K7ro\",\"link_active\":\"auth-page_link_active__3gWLC\",\"loading\":\"auth-page_loading__sJOKp\",\"submitButton\":\"auth-page_submitButton__1A11M\",\"submitText\":\"auth-page_submitText__3Q8E4\",\"modal\":\"auth-page_modal__1dtyl\",\"modalButton\":\"auth-page_modalButton__2JBEJ\",\"showSlow\":\"auth-page_showSlow__2NuO1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__3q-UT\",\"inner\":\"loader_inner__3nuDe\",\"one\":\"loader_one__34iQ7\",\"rotate-one\":\"loader_rotate-one__1EaWJ\",\"two\":\"loader_two__3rQ9K\",\"rotate-two\":\"loader_rotate-two__3ISdH\",\"three\":\"loader_three__2EnyX\",\"rotate-three\":\"loader_rotate-three__1X95X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"rotate-block_wrapper__3V6aP\",\"content\":\"rotate-block_content__3aNaM\",\"show\":\"rotate-block_show__7P0e6\",\"front\":\"rotate-block_front__5Aeo8\",\"back\":\"rotate-block_back__PzjXs\",\"invisible\":\"rotate-block_invisible__1foO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"input_wrapper__ScKaz\",\"raised\":\"input_raised__1-9FC\",\"icon\":\"input_icon__1E5oF\",\"label\":\"input_label__2HEAt\",\"input\":\"input_input__2cMVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__oXw5_\",\"content\":\"modal_content__3KdOs\",\"active\":\"modal_active__2kR3b\",\"shadow\":\"modal_shadow__10JtS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__2kSA9\",\"shadowHover\":\"button_shadowHover__3xPyV\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export enum FORM_NAME {\r\n    REGISTRATION = 'REGISTRATION',\r\n    SING_IN = 'SING_IN',\r\n}\r\n\r\nexport const ERRORS_MAP = {\r\n    'auth/claims-too-large': 'Предоставленная полезная нагрузка setCustomUserClaims()превышает максимально допустимый размер в 1000 байт.',\r\n    'auth/email-already-exists': 'Предоставленный адрес электронной почты уже используется существующим пользователем. Каждый пользователь должен иметь уникальный адрес электронной почты.',\r\n    'auth/id-token-expired': 'Срок действия предоставленного токена истек.',\r\n    'auth/id-token-revoked': 'Токен был отозван.',\r\n    'auth/insufficient-permission': 'У учетных данных, используемых для инициализации Admin SDK, недостаточно прав для доступа к запрашиваемому ресурсу аутентификации. Обратитесь к разделу Настройка проекта Firebase для получения документации о том, как создать учетные данные с соответствующими разрешениями и использовать их для аутентификации Admin SDK.',\r\n    'auth/internal-error': 'Сервер аутентификации обнаружил непредвиденную ошибку при попытке обработать запрос. Сообщение об ошибке должно содержать ответ от сервера аутентификации, содержащий дополнительную информацию. Если ошибка не устранена, сообщите о проблеме на наш канал поддержки отчетов об ошибках .',\r\n    'auth/invalid-argument': 'Недопустимый аргумент был предоставлен методу аутентификации. Сообщение об ошибке должно содержать дополнительную информацию.',\r\n    'auth/invalid-claims': 'Предоставленные атрибуты пользовательских утверждений setCustomUserClaims() недействительны.',\r\n    'auth/invalid-continue-uri': 'URL-адрес продолжения должен быть допустимой строкой URL-адреса.',\r\n    'auth/invalid-creation-time': 'Время создания должно быть допустимой строкой даты UTC.',\r\n    'auth/invalid-credential': 'Учетные данные, используемые для аутентификации Admin SDK, не могут использоваться для выполнения желаемого действия. Некоторые методы аутентификации , такие как createCustomToken()и verifyIdToken()требуют SDK для инициализации с сертификатом верительным в отличии от обновления маркеров или приложений по умолчанию учетных данных. Посмотрите Инициализировать SDK для документации о том, как аутентифицировать Admin SDK с учетными данными сертификата.',\r\n    'auth/invalid-disabled-field': 'Предоставленное значение для disabled свойства пользователя недопустимо. Это должно быть логическое значение.',\r\n    'auth/invalid-display-name': 'Предоставленное значение для displayName свойства пользователя недопустимо. Это должна быть непустая строка.',\r\n    'auth/invalid-dynamic-link-domain': 'Предоставленный домен динамической ссылки не настроен или не авторизован для текущего проекта.',\r\n    'auth/invalid-email-verified': 'Предоставленное значение для emailVerified свойства пользователя недопустимо. Это должно быть логическое значение.',\r\n    'auth/invalid-hash-algorithm': 'Алгоритм хеширования должен соответствовать одной из строк в списке поддерживаемых алгоритмов.',\r\n    'auth/invalid-hash-block-size': 'Размер блока хеша должен быть действительным числом.',\r\n    'auth/invalid-hash-derived-key-length': 'Длина ключа, полученного из хэша, должна быть действительным числом.',\r\n    'auth/invalid-hash-key': 'Ключ хеша должен быть действительным байтовым буфером.',\r\n    'auth/invalid-hash-memory-cost': 'Стоимость хеш-памяти должна быть действительным числом.',\r\n    'auth/invalid-hash-parallelization': 'Распараллеливание хеша должно быть действительным числом.',\r\n    'auth/invalid-hash-rounds': 'Количество раундов должно быть действительным.',\r\n    'auth/invalid-hash-salt-separator': 'Поле солевого разделителя алгоритма хеширования должно быть действительным байтовым буфером.',\r\n    'auth/invalid-id-token': 'Предоставленный токен ID не является действительным токеном.',\r\n    'auth/invalid-last-sign-in-time': 'Время последнего входа должно быть верной строкой даты UTC.',\r\n    'auth/invalid-page-token': 'Предоставленный токен следующей страницы недействителен. Это должна быть допустимая непустая строка.',\r\n    'auth/invalid-password': 'Предоставленное значение для password свойства пользователя недопустимо. Это должна быть строка длиной не менее шести символов.',\r\n    'auth/invalid-password-hash': 'Хэш пароля должен быть действительным байтовым буфером.',\r\n    'auth/invalid-password-salt': 'Соль пароля должна быть действительным байтовым буфером',\r\n    'auth/invalid-phone-number': 'Предоставленное значение для phoneNumber недействительно. Это должна быть непустая строка идентификатора, соответствующая стандарту E.164.',\r\n    'auth/invalid-photo-url': 'Предоставленное значение для photoURL свойства пользователя недопустимо. Это должен быть строковый URL.',\r\n    'auth/invalid-provider-data': 'ProviderData должен быть допустимым массивом объектов UserInfo.',\r\n    'auth/invalid-provider-id': 'ProviderId должен быть допустимой строкой идентификатора поддерживаемого поставщика.',\r\n    'auth/invalid-session-cookie-duration': 'Продолжительность сеансового cookie должна быть действительным числом в миллисекундах от 5 минут до 2 недель.',\r\n    'auth/invalid-uid': 'Предоставленная uidстрока должна быть непустой и содержать не более 128 символов.',\r\n    'auth/invalid-user-import': 'Пользовательская запись для импорта недействительна.',\r\n    'auth/maximum-user-count-exceeded': 'Превышено максимально допустимое количество пользователей для импорта.',\r\n    'auth/missing-android-pkg-name': 'Имя пакета Android должно быть предоставлено, если требуется установить приложение Android.',\r\n    'auth/missing-continue-uri': 'В запросе должен быть указан действительный URL продолжения.',\r\n    'auth/missing-hash-algorithm': 'Для импорта пользователей с хэшами паролей необходимо указать алгоритм хеширования и его параметры.',\r\n    'auth/missing-ios-bundle-id': 'В запросе отсутствует идентификатор пакета iOS.',\r\n    'auth/missing-uid': 'uidИдентификатор необходим для текущей операции.',\r\n    'auth/operation-not-allowed': 'Предоставленный поставщик входа отключен для вашего проекта. Обратитетсь к администратору сайта',\r\n    'auth/phone-number-already-exists': 'Предоставленный phoneNumberуже используется существующим пользователем. Каждый пользователь должен иметь уникальный phoneNumber.',\r\n    'auth/project-not-found': 'Не найден проект для учетных данных, использованных для инициализации SDK администратора.  Обратитетсь к администратору сайта',\r\n    'auth/session-cookie-expired': 'Срок действия предоставленного файла cookie сеанса истек.',\r\n    'auth/session-cookie-revoked': 'Файл cookie сеанса был отозван.',\r\n    'auth/uid-already-exists': 'Предоставленный uid уже используется существующим пользователем. Каждый пользователь должен иметь уникальный uid.',\r\n    'auth/unauthorized-continue-uri': 'Домен продолжения URL не находится в белом списке.',\r\n    'auth/user-not-found': 'Не существует записи пользователя, соответствующей предоставленному идентификатору.',\r\n    'auth/weak-password': 'Пароль должен быть не менее 6 символов',\r\n    'auth/email-already-in-use': 'Адрес электронной почты уже используется другой учетной записью.',\r\n    'auth/confirm-password-different': 'Пароль и подтверждение пароля отличаются.',\r\n    'auth/wrong-password': 'Пароль неверен или у пользователя нет пароля.',\r\n    'auth/invalid-email': 'Некорректный адрес электронной почты.'\r\n}","import React from 'react';\r\n\r\nexport const Mail = (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\">\r\n        <path\r\n            d=\"M116.73,31.83a3,3,0,0,0-4.2-.61L64.14,67.34a1,1,0,0,1-1.2,0L15.5,31.06a3,3,0,1,0-3.64,4.77L49.16,64.36,12.27,92.16A3,3,0,1,0,15.88,97L54.11,68.14l5.18,4a7,7,0,0,0,8.43.06l5.44-4.06L111.84,97a3,3,0,1,0,3.59-4.81L78.17,64.35,116.12,36A3,3,0,0,0,116.73,31.83Z\" />\r\n        <path\r\n            d=\"M113,19H15A15,15,0,0,0,0,34V94a15,15,0,0,0,15,15h98a15,15,0,0,0,15-15V34A15,15,0,0,0,113,19Zm9,75a9,9,0,0,1-9,9H15a9,9,0,0,1-9-9V34a9,9,0,0,1,9-9h98a9,9,0,0,1,9,9Z\" />\r\n    </svg>\r\n)","import React from 'react';\r\n\r\nexport const Lock = (\r\n    <svg id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 174.239 174.239\">\r\n        <path d=\"M127.505,77.202l-8.916-0.041V31.467C118.589,14.116,104.471,0,87.12,0S55.653,14.116,55.653,31.467v45.695l-8.885,0.04\r\n\t\tc-12.844,0-23.292,10.448-23.292,23.292v26.034c0,26.308,21.403,47.712,47.712,47.712h31.863c26.308,0,47.712-21.403,47.712-47.712\r\n\t\tv-26.034C150.763,87.65,140.315,77.202,127.505,77.202z M70.588,31.467c0-9.115,7.416-16.532,16.532-16.532\r\n\t\tc9.118,0,16.534,7.416,16.534,16.532v45.67H70.588V31.467z M135.828,126.528c0,18.073-14.704,32.777-32.777,32.777H71.188\r\n\t\tc-18.073,0-32.777-14.704-32.777-32.777v-26.034c0-4.609,3.748-8.357,8.391-8.357L59,92.081l0.002,0.046\r\n\t\tc0.579-0.032,1.159-0.049,1.745-0.053l52.352-0.002l0.401,0.002c0.583,0.005,1.162,0.022,1.736,0.053l0.002-0.046l12.232,0.056\r\n\t\tc4.609,0,8.357,3.748,8.357,8.357V126.528z\" />\r\n        <path d=\"M87.118,114.369c-4.66,0-8.437,3.777-8.437,8.437c0,2.482,1.091,4.691,2.797,6.235c-0.03,0.709-0.072,1.368-0.072,2.202\r\n\t\tc0,3.155,2.557,5.712,5.712,5.712c3.155,0,5.712-2.557,5.712-5.712c0-0.834-0.042-1.493-0.072-2.202\r\n\t\tc1.706-1.544,2.797-3.753,2.797-6.235C95.555,118.146,91.777,114.369,87.118,114.369z\" />\r\n    </svg>\r\n)","import React, {FC} from 'react';\r\nimport cn from 'classnames';\r\nimport style from './loader.module.scss';\r\n\r\ninterface ILoaderProps {\r\n    width?: number; // в px\r\n    color?: string;\r\n}\r\n\r\nexport const Loader: FC<ILoaderProps> = (props: ILoaderProps) => {\r\n    const {width = 32, color = '#af3d7f'} = props;\r\n\r\n    const loaderStyle = {\r\n        width: `${width}px`,\r\n        height: `${width}px`,\r\n        left: `calc(50% - ${width / 2}px)`,\r\n        top: `calc(50% - ${width / 2}px)`\r\n    }\r\n\r\n    return (\r\n        <div style={loaderStyle} className={style.loader}>\r\n            <div style={{borderBottom: `3px solid ${color}`}} className={cn(style.inner, style.one)} />\r\n            <div style={{borderRight: `3px solid ${color}`}} className={cn(style.inner, style.two)} />\r\n            <div style={{borderTop: `3px solid ${color}`}} className={cn(style.inner, style.three)} />\r\n        </div>\r\n    )\r\n};","import React, {ReactNode, FC, MouseEvent} from 'react';\r\nimport cn from 'classnames';\r\nimport style from './button.module.scss';\r\n\r\ninterface IPropsInput {\r\n    onClick: (event: MouseEvent) => void;\r\n    onCClick?: any;\r\n    ddisabled?: any;\r\n    children: ReactNode;\r\n    disabled?: boolean;\r\n    className?: string;\r\n}\r\n\r\nexport const Button: FC<IPropsInput> = (props: IPropsInput) => {\r\n    const {children, disabled, className, onClick} = props;\r\n\r\n    return (\r\n        <button\r\n            className={cn(className, style.button)}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n};","import React, {FC, ChangeEvent, useCallback} from 'react';\r\nimport cn from 'classnames';\r\nimport style from './input.module.scss';\r\n\r\n\r\ninterface IPropsInput {\r\n    onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n    onEnter?: (event: ChangeEvent<HTMLInputElement>) => void;\r\n    value: string;\r\n    disabled?: boolean;\r\n    className?: string;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport const Input: FC<IPropsInput> = (props: IPropsInput) => {\r\n    const {className, onChange, onEnter, disabled, value, label, icon, ...otherProps} = props;\r\n\r\n    const handleOnEnter = useCallback(event => {\r\n        if (event.key === 'Enter' && onEnter) {\r\n            onEnter(event);\r\n        }\r\n    }, [onEnter]);\r\n\r\n    return (\r\n        <div className={cn(style.wrapper, className)}>\r\n            {icon && <div className={style.icon}>{icon}</div>}\r\n            <input\r\n                {...otherProps}\r\n                className={style.input}\r\n                value={value}\r\n                disabled={disabled}\r\n                onChange={onChange}\r\n                onKeyDown={handleOnEnter}\r\n            />\r\n            {label && <label className={style.label}>{label}</label>}\r\n        </div>\r\n    )\r\n};","import React, {FC} from 'react';\r\nimport cn from 'classnames'\r\nimport style from './rotate-block.module.scss';\r\n\r\ninterface IRotateBlockProps {\r\n    FrontComponent: any;\r\n    BackComponent: any;\r\n    isFront: boolean;\r\n}\r\n\r\nexport const RotateBlock: FC<IRotateBlockProps> = (props: IRotateBlockProps) => {\r\n    const {FrontComponent, BackComponent, isFront} = props;\r\n\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={cn(style.content, isFront && style.show)}>\r\n                <div className={cn(style.front, !isFront && style.invisible)}>{FrontComponent}</div>\r\n                <div className={cn(style.back, isFront && style.invisible)}>{BackComponent}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, {FC, ReactNode, useEffect, useMemo, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport cn from 'classnames';\r\nimport style from './modal.module.scss';\r\n\r\ninterface IPropsModal {\r\n    isActive: boolean;\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ANIMATION_DELAY = 1000;\r\nlet blockTimeoutId = null;\r\nlet activeTimeoutId = null;\r\n\r\nexport const Modal: FC<IPropsModal> = (props: IPropsModal) => {\r\n    const {isActive, children} = props;\r\n    const [block, setBlock] = useState<boolean>(false);\r\n    const [active, setActive] = useState<boolean>(false);\r\n\r\n    const isActiveMemo = useMemo(() => isActive, [isActive])\r\n    useEffect(() => {\r\n        if (isActiveMemo) {\r\n            setBlock(true)\r\n        } else {\r\n            // delete portal block when animation end\r\n            blockTimeoutId = setTimeout(() => {\r\n                setBlock(false)\r\n            }, ANIMATION_DELAY)\r\n        }\r\n    }, [isActiveMemo, setBlock]);\r\n    useEffect(() => {\r\n        if (isActiveMemo) {\r\n            // start animation when portal block mount\r\n            activeTimeoutId = setTimeout(() => {\r\n                setActive(true)\r\n            }, 10)\r\n        } else {\r\n            setActive(false)\r\n        }\r\n    }, [isActiveMemo, setActive]);\r\n    useEffect(() => () => {\r\n        // clear timers when modal unmount\r\n        clearTimeout(blockTimeoutId)\r\n        clearTimeout(activeTimeoutId)\r\n    }, [])\r\n\r\n    return block\r\n        ? ReactDOM.createPortal(\r\n            <div className={cn(style.modal)}>\r\n                <div className={cn(style.content, active && style.active)}>\r\n                    {children}\r\n                </div>\r\n            </div>,\r\n            document.getElementById('root')\r\n        )\r\n        : null;\r\n};","import React, {useCallback, useEffect, useState} from 'react';\r\nimport cn from 'classnames'\r\nimport {ERRORS_MAP, FORM_NAME} from '../constants';\r\nimport {Mail, Lock} from '../assets';\r\nimport {Loader} from '../components/loader'\r\nimport {Button} from '../components/button';\r\nimport {Input} from \"../components/input\";\r\nimport {RotateBlock} from \"../components/rotate-block/rotate-block\";\r\nimport {ANIMATION_DELAY, Modal} from \"../components/modal\";\r\nimport style from './auth-page.module.scss';\r\n\r\ninterface IAuthPage {\r\n    firebase: {\r\n        auth: () => ({\r\n            createUserWithEmailAndPassword(email: string, password: string): Promise<firebase.auth.UserCredential>;\r\n\r\n            signInWithEmailAndPassword(email: string, password: string): Promise<firebase.auth.UserCredential>;\r\n        })\r\n    }\r\n}\r\n\r\nlet timeoutId = null;\r\n\r\nexport function AuthPage(props: IAuthPage) {\r\n    const {firebase} = props;\r\n    const [loading, setLoading] = useState(false);\r\n    const [isModalActive, toggleModal] = useState<boolean>(false);\r\n    const [form, setForm] = useState(FORM_NAME.SING_IN);\r\n    const [modal, showInfoBlock] = useState({message: '', isActive: false});\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const isRegistryForm = form === FORM_NAME.REGISTRATION;\r\n    const isDisabled = isRegistryForm\r\n        ? !email || !password || !confirmPassword || (password !== confirmPassword) || modal.isActive\r\n        : !email || !password || modal.isActive;\r\n\r\n    useEffect(() => () => clearTimeout(timeoutId), []);\r\n\r\n    const handleShowInfoBlock = useCallback(errorMessage => {\r\n        showInfoBlock({\r\n            message: errorMessage || 'Что-то пошло не так. Попробуйте еще раз!',\r\n            isActive: true\r\n        })\r\n    }, [showInfoBlock]);\r\n\r\n    const closeInfoBlock = useCallback(() => {\r\n        showInfoBlock({\r\n            message: modal.message,\r\n            isActive: false\r\n        })\r\n    }, [showInfoBlock, modal.message]);\r\n\r\n    const clearForm = useCallback(() => {\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n    }, [setPassword, setConfirmPassword]);\r\n\r\n    const toggleForm = useCallback(() => {\r\n        setForm(isRegistryForm ? FORM_NAME.SING_IN : FORM_NAME.REGISTRATION);\r\n        closeInfoBlock();\r\n        clearForm();\r\n    }, [isRegistryForm, setForm, closeInfoBlock, clearForm]);\r\n\r\n    const handleChange = useCallback(setState => ({target: {value}}) => {\r\n        setState(value);\r\n        closeInfoBlock();\r\n    }, [closeInfoBlock]);\r\n\r\n    const handleToggleModal = useCallback(() => {\r\n        toggleModal(!isModalActive);\r\n    }, [toggleModal, isModalActive]);\r\n\r\n    const handleCreate = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const user = await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n            // localStorage.setItem('user', JSON.stringify(user));\r\n            console.log(user)\r\n            handleToggleModal()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            handleShowInfoBlock(ERRORS_MAP[error.code])\r\n            setLoading(false)\r\n        }\r\n    }, [email, password, firebase, handleShowInfoBlock, setLoading, handleToggleModal]);\r\n\r\n    const handleSingIn = useCallback(async () => {\r\n        console.log('handleSingIn')\r\n        setLoading(true)\r\n        try {\r\n            const user = await firebase.auth().signInWithEmailAndPassword(email, password);\r\n            // localStorage.setItem('user', JSON.stringify(user));\r\n            console.log(user)\r\n            handleToggleModal()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            handleShowInfoBlock(ERRORS_MAP[error.code])\r\n            setLoading(false)\r\n        }\r\n    }, [email, password, firebase, handleShowInfoBlock, setLoading, handleToggleModal]);\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        isRegistryForm\r\n            ? handleCreate()\r\n            : handleSingIn()\r\n    }, [isRegistryForm, handleCreate, handleSingIn]);\r\n\r\n    const handleGoToMainPage = useCallback(() => {\r\n        handleToggleModal();\r\n        // wait when modal leave\r\n        timeoutId = setTimeout(() => {\r\n            // @ts-ignore\r\n            window.location = 'https://ribalkoko48.github.io/';\r\n        }, ANIMATION_DELAY)\r\n    }, [handleToggleModal]);\r\n\r\n    const FrontComponent = <Button\r\n        className={style.submitButton}\r\n        onClick={handleSubmit}\r\n        disabled={isDisabled}\r\n    >{\r\n        loading\r\n            ? <div className={style.loading}><Loader width={24}/> ...Загружаю</div>\r\n            : <div className={style.submitText} onClick={handleToggleModal}>{isRegistryForm ? 'Зарегистрироваться' : 'Войти'}</div>\r\n    }</Button>\r\n\r\n    return (\r\n        <div className={style.authPage}>\r\n            {<div className={style.title}>{isRegistryForm ? 'Регистрация' : 'Вход'}</div>}\r\n            <div className={cn(style.forms, isRegistryForm && style.forms_active)}>\r\n                <div className={cn(style.form, style.registration)}>\r\n                    <Input\r\n                        label=\"Email\"\r\n                        placeholder=\"Введите Email\"\r\n                        className={style.input}\r\n                        icon={Mail}\r\n                        value={email}\r\n                        disabled={!isRegistryForm}\r\n                        onChange={handleChange(setEmail)}\r\n                        onEnter={handleSubmit}\r\n                    />\r\n                    <Input\r\n                        type=\"password\"\r\n                        label=\"Пароль\"\r\n                        placeholder=\"Введите пароль\"\r\n                        className={style.input}\r\n                        icon={Lock}\r\n                        value={password}\r\n                        disabled={!isRegistryForm}\r\n                        onChange={handleChange(setPassword)}\r\n                        onEnter={handleSubmit}\r\n                    />\r\n                    <Input\r\n                        type=\"password\"\r\n                        label=\"Пароль еще раз\"\r\n                        placeholder=\"Введите пароль\"\r\n                        className={style.input}\r\n                        icon={Lock}\r\n                        value={confirmPassword}\r\n                        disabled={!isRegistryForm}\r\n                        onChange={handleChange(setConfirmPassword)}\r\n                        onEnter={handleSubmit}\r\n                    />\r\n                </div>\r\n                <div className={cn(style.form, style.singIn)}>\r\n                    <Input\r\n                        label=\"Email\"\r\n                        placeholder=\"Введите Email\"\r\n                        className={style.input}\r\n                        icon={Mail}\r\n                        value={email}\r\n                        disabled={isRegistryForm}\r\n                        onChange={handleChange(setEmail)}\r\n                        onEnter={handleSubmit}\r\n                    />\r\n                    <Input\r\n                        type=\"password\"\r\n                        label=\"Пароль\"\r\n                        placeholder=\"Введите пароль\"\r\n                        className={style.input}\r\n                        icon={Lock}\r\n                        value={password}\r\n                        disabled={isRegistryForm}\r\n                        onChange={handleChange(setPassword)}\r\n                        onEnter={handleSubmit}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={style.linkWrap}>\r\n                <div onClick={toggleForm} className={cn(style.link, isRegistryForm && style.link_active)}>Я уже зарегистрирован</div>\r\n                <div onClick={toggleForm} className={cn(style.link, !isRegistryForm && style.link_active)}>Перейти к регистрации</div>\r\n            </div>\r\n            <RotateBlock\r\n                isFront={!modal.isActive}\r\n                FrontComponent={FrontComponent}\r\n                BackComponent={modal.message}/>\r\n\r\n            <Modal isActive={isModalActive}>\r\n                <div className={style.modal}>\r\n                    <p>Добро пожаловать в мусорку ribalkoko48</p>\r\n                    <Button className={style.modalButton} onClick={handleGoToMainPage}>Перейти на главную</Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport appFirebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {AuthPage} from './auth-page/auth-page';\r\nimport './index.css';\r\n\r\nexport const firebase = appFirebase.initializeApp({\r\n    apiKey: \"AIzaSyATQBkeX-usruXIBWBwG8UJi96IJQthMqU\",\r\n    authDomain: \"ribalkoko48-c84fb.firebaseapp.com\",\r\n    databaseURL: \"https://ribalkoko48-c84fb.firebaseio.com\",\r\n    projectId: \"ribalkoko48-c84fb\",\r\n    storageBucket: \"ribalkoko48-c84fb.appspot.com\",\r\n    messagingSenderId: \"291618989649\",\r\n    appId: \"1:291618989649:web:c8695254c4cf819397ba70\",\r\n    measurementId: \"G-137EG01YC2\"\r\n});\r\n\r\nReactDOM.render(\r\n    <AuthPage firebase={firebase} />,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}